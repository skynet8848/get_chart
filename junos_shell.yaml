---
- name: Get Device Facts
  hosts: all
  roles:
    - Juniper.junos 
  connection: local
  gather_facts: no

  vars_prompt:
    - name: build_name
      prompt: Junos Build Name
      private: no
 
  tasks:
    - name: get uptime using galaxy module
#      juniper_junos_command:
#        commands:
#          - show system uptime
#          - show version
      juniper_junos_rpc:
        rpcs:
          - get-system-uptime-information
          - get-software-information
        provider:
          host: "{{ ansible_host }}"
          port: 22
          #user: "regress"
          #passwd: "MaRtInI"
          user: "root"
          passwd: "Embe1mpls"
      register: junos_result

    - name: 'Get the /etc/passwd file'
      juniper_junos_rpc:
        rpc: 'request-shell-execute'
        kwarg:
          command: 'nohup scp regress@10.208.80.123:/home/regress/{{build_name}} /var/tmp/{{build_name}} &' 
        provider:
          host: "{{ ansible_host }}"
          port: 22
          timeout: 36000
          #user: "regress"
          #passwd: "MaRtInI"
          user: "root"
          passwd: "Embe1mpls"
      register: response
    
    - name: 'Print response'
      debug:
        var: response.parsed_output.output 
    - name: "Print the config changes"
      debug:
        var: response.parsed_output.output

    - name: display uptimes (single-RE)
      debug:
        var: junos_result.results[0].parsed_output['system-uptime-information']['system-booted-time']
      when: junos_result.results[0].parsed_output['system-uptime-information'] is defined

    - name: display uptimes (multi-RE)
      debug:
        var: junos_result.results[0].parsed_output['multi-routing-engine-results']['multi-routing-engine-item'][{{device_role}}]['system-uptime-information']['system-booted-time']
      when: junos_result.results[0].parsed_output['multi-routing-engine-results'] is defined
    
    - name: display version (single-RE)
      debug:
        var: junos_result.results[1].parsed_output['software-information']['junos-version']
      when: junos_result.results[1].parsed_output['software-information'] is defined

    - name: display version (multi-RE)
      debug:
        var: junos_result.results[1].parsed_output['multi-routing-engine-results']['multi-routing-engine-item'][{{device_role}}]['software-information']['junos-version']
      when: junos_result.results[1].parsed_output['multi-routing-engine-results'] is defined
    
    - name: save device facts
      template:
        src: device-facts.j2
        dest: "{{inventory_hostname}}.csv"
#    - name: display uptimes
#      debug:
#        var: junos_result
#        var: junos_result.results[0].parsed_output['system-uptime-information']['system-booted-time']
#        var: junos_result.parsed_output['system-uptime-information']['uptime-information']['up-time']
#        var: uptime['stdout_lines']
#     - name: display uptimes (Ansible shortcut)
#       debug:
#         var: junos_result.stdout_lines
#    - name: display version
#      debug:
#         var: junos_result.parsed_output['software-information']['junos-version']
#         var: junos_result.results.['parsed_output']['software-information']['junos-version']
#         var: junos_result.results[1].parsed_output['software-information']['junos-version']
